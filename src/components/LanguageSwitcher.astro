---
import { LOCALES, LANGS, type LOCALE } from "../../astro.config";
import { getRelativeLocaleUrl } from "astro:i18n";

const currentLocale = (Astro.currentLocale as LOCALE) ?? "en";

// Generate URLs for each locale
const localeUrls: Record<LOCALE, string> = {} as Record<LOCALE, string>;
LOCALES.forEach((locale) => {
  // Get the current path without the locale prefix
  const currentPath = Astro.url.pathname;
  const segments = currentPath.split("/").filter(Boolean);

  // Remove the locale segment if it exists
  let pathWithoutLocale = currentPath;
  if (segments.length > 0 && LOCALES.includes(segments[0] as LOCALE)) {
    pathWithoutLocale = "/" + segments.slice(1).join("/");
  }

  // For the default locale with prefixDefaultLocale: true
  // we need to explicitly include the locale in the URL
  localeUrls[locale] = getRelativeLocaleUrl(locale, pathWithoutLocale);
});
---

<div class="language-switcher">
  <select id="language-select" aria-label="Select language">
    {
      LOCALES.map((locale) => (
        <option value={locale} selected={locale === currentLocale}>
          {LANGS[locale]}
        </option>
      ))
    }
  </select>
</div>

<script define:vars={{ localeUrls }}>
  document.addEventListener("DOMContentLoaded", () => {
    const languageSelect = document.getElementById("language-select");

    if (languageSelect) {
      languageSelect.addEventListener("change", (event) => {
        const target = event.target;
        if (!(target instanceof HTMLSelectElement)) return;
        const newLocale = target.value;

        // Navigate to the pre-computed URL for this locale
        window.location.href = localeUrls[newLocale];
      });
    }
  });
</script>

<style>
  .language-switcher {
    position: relative;
  }

  select {
    appearance: none;
    background-color: var(--bg);
    border: 1px solid var(--gray-light);
    border-radius: 4px;
    padding: 0.3rem 1.5rem 0.3rem 0.5rem;
    font-size: 0.9rem;
    cursor: pointer;
    color: var(--text);
  }

  .language-switcher::after {
    content: "â–¼";
    font-size: 0.7rem;
    position: absolute;
    right: 0.5rem;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    color: var(--text);
  }

  select:focus {
    outline: 2px solid var(--accent);
    outline-offset: 1px;
  }
</style>
