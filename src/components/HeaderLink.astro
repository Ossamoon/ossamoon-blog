---
import type { HTMLAttributes } from 'astro/types';
import { getRelativeLocaleUrl } from 'astro:i18n';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

// Convert href to string and provide default value
const hrefString = typeof href === 'string' ? href : href?.toString() || '/';

// Generate localized URL using Astro's i18n utility
const localizedHref = getRelativeLocaleUrl(Astro.currentLocale || 'en', hrefString);

// For determining if the link is active
const currentPath = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const currentPathSegments = currentPath.split('/').filter(Boolean);
const hrefSegments = hrefString.split('/').filter(Boolean);

// Check if the current path matches the href (ignoring locale prefix)
const isActive =
  hrefString === '/' && currentPathSegments.length <= 1 || // Home page
  hrefSegments.length > 0 && currentPathSegments.includes(hrefSegments[0]); // Other pages
---

<a href={localizedHref} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
