---
import type { HTMLAttributes } from 'astro/types';
import { getLocaleFromUrl, removeLocaleFromUrl } from '../utils/i18n';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const currentPath = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const currentLocale = getLocaleFromUrl(currentPath);
const localizedHref = currentLocale === 'en' ? href : `/${currentLocale}${href}`;

// For determining if the link is active
const pathWithoutLocale = removeLocaleFromUrl(currentPath);
const subpath = pathWithoutLocale.match(/[^\/]+/g);
const isActive = href === pathWithoutLocale || href === '/' + (subpath?.[0] || '');
---

<a href={localizedHref} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
